version: 1
disable_existing_loggers: False

# --------------------------------
# 1️⃣ Formatters
# --------------------------------
formatters:
  json:
    (): pythonjsonlogger.jsonlogger.JsonFormatter
    fmt: '%(asctime)s %(levelname)s %(name)s %(message)s'

# --------------------------------
# 2️⃣ Handlers
# --------------------------------
handlers:
  # All messages (DEBUG+) from the named logger
  events:
    class: logging.handlers.RotatingFileHandler
    filename: logs/current_run/events.jsonl
    maxBytes: 10_000_000
    backupCount: 1000
    level: DEBUG          # capture everything it receives
    formatter: json

  # High-severity fallback (root)
  errors:
    class: logging.handlers.RotatingFileHandler
    filename: logs/current_run/errors.jsonl
    maxBytes: 10_000_000
    backupCount: 200
    level: WARNING        # WARNING, ERROR, CRITICAL
    formatter: json

# --------------------------------
# 3️⃣ Named logger (your code)
# --------------------------------
loggers:
  "hessian_based":
    level: DEBUG                      # let DEBUG flow
    handlers: [events]                # always land in events.jsonl
    propagate: True                   # bubble up to root as well

  "__main__":
    level: DEBUG
    handlers: [events]
    propagate: True

# --------------------------------
# 4️⃣ Root logger (fallback)
# --------------------------------
root:
  level: WARNING                      # ignore DEBUG/INFO
  handlers: [errors]
